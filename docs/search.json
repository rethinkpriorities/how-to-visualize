[{"path":"index.html","id":"how-to-visualize","chapter":"How to Visualize","heading":"How to Visualize","text":"","code":""},{"path":"index.html","id":"important","chapter":"How to Visualize","heading":"Important","text":"work progress! point even call alpha, please patient finalize book!","code":""},{"path":"index.html","id":"about","chapter":"How to Visualize","heading":"About","text":"book organize knowledge data visualization provide examples, code, templates, functions can used across various Rethink Priorities projects.several important goals ’re hoping achieve book:Establish knowledge base best represent different types data relationshipsProvide examples code can adjusted incorporated suit common data visualization needs1Establish different color palettes can consistently used within Rethink Priorities projectsBe inclusive designing responsive color-blind friendly graphsBuild bookdown ‘example template’ bookdown workIf feedback, please contact people create issue\nGitHub repository.","code":""},{"path":"index.html","id":"contributions","chapter":"How to Visualize","heading":"Contributions","text":"Please add list acknowledge contributions.Willem Sleegers: willem@rethinkpriorities.orgWillem Sleegers: willem@rethinkpriorities.orgJamie Elsey:\njamie@rethinkpriorities.orgJamie Elsey:\njamie@rethinkpriorities.orgDavid Reinstein: dreinstein@rethinkpriorities.orgDavid Reinstein: dreinstein@rethinkpriorities.org","code":""},{"path":"best-practices.html","id":"best-practices","chapter":"1 Best practices","heading":"1 Best practices","text":"","code":""},{"path":"best-practices.html","id":"ggplot","chapter":"1 Best practices","heading":"1.1 ggplot","text":"Aim use ggplot R package creating plots. ggplot powerful visualization package enable us create kind plots want present. use ggplot, can write code can re-used . also makes easy write custom themes color palettes can re-used, produce consistency within projects people likely appreciate.Always save plot object environment well printing belongs.‘Piping data ggplot’ make code portable readable. Keep steps separate.","code":""},{"path":"best-practices.html","id":"re-usability","chapter":"1 Best practices","heading":"1.2 Re-usability","text":"Ideally, come set functions default options key sets plots use like. Otherwise define sets common options plots one place, repeated ggplot elements together list avoid repetition clutter allow easy ‘global’ adjustment.However, times much automation makes things less flexible increases mental overhead. ’ll come good compromises.","code":""},{"path":"best-practices.html","id":"labeling","chapter":"1 Best practices","heading":"1.3 Labeling","text":"Use readable concise labels. Examples good labels :“Amount donated”“GWWC” (can assume people know GWWC )Examples bad labels :amt_donCoding-wise: Define reuse lists labels (use inherent labeling options exist, exploit existing variable value labels.)","code":""},{"path":"best-practices.html","id":"anonymity","chapter":"1 Best practices","heading":"1.4 Anonymity","text":"make sure real data plot anonymous. several tricks can use assure anonymity data.Plot approximations data, rather actual data . can done geoms geom_jitter position argument.Disable hover information interactive plots.","code":""},{"path":"using-ggplot.html","id":"using-ggplot","chapter":"2 Using ggplot","heading":"2 Using ggplot","text":"","code":""},{"path":"using-ggplot.html","id":"using-geom_point","chapter":"2 Using ggplot","heading":"2.1 Using geom_point","text":"","code":""},{"path":"using-ggplot.html","id":"availability-of-different-point-styles","chapter":"2 Using ggplot","heading":"2.2 Availability of different point styles","text":"Multiple different styles point available using ‘shape =’ command, followed number desired shape. Note different shapes /allow color fill, also ggplot ggplotly display shapes slightly differently.","code":"\npoint_styles <- tibble(\n  point_style = seq(0, 25),\n  x = c(rep(seq(0, 9), 2), seq(0, 5)),\n  y = c(rep(0, 10), rep(1, 10), rep(2, 6)),\n  label = c(rep(\"0-9\", 10), rep(\"10-19\", 10), rep(\"20-25\", 6))\n)\n\npoint_styles <- mutate(point_styles, \n  label = fct_relevel(label, \"0-9\" , \"10-19\", \"20-25\")\n)\np <- ggplot(point_styles, aes(x = x, y = label)) +\n  scale_x_continuous(\n    limits = c(0 , 9), \n    breaks = seq(from = 0, to = 9, by = 1)\n  ) +\n  geom_point(\n    size = 5, \n    shape = point_styles$point_style, \n    color = \"Black\", \n    fill = \"#7ccbbc\"\n  ) +\n  theme_rethink()\n\nggplotly(p)"},{"path":"bar-plots.html","id":"bar-plots","chapter":"3 Bar plots","heading":"3 Bar plots","text":"","code":""},{"path":"bar-plots.html","id":"simple-bar-plot","chapter":"3 Bar plots","heading":"3.1 Simple bar plot","text":"simple bar plot2.","code":"\np <- ggplot(mpg, aes(x = class, fill = class)) +\n  geom_bar(alpha = .75) +\n  scale_fill_viridis(discrete = TRUE, option = \"mako\", end = .95) +\n  theme_rethink()\n\nggplotly(p, tooltip = \"x\")"},{"path":"bar-plots.html","id":"stacked-bar-plots","chapter":"3 Bar plots","heading":"3.2 Stacked bar plots","text":"Stacked bar plots can used add additional information bar plot.Hello world!Apparently, bs4_book comes callout block box, let’s check :bs4_book style also includes .rmdnote callout block\nlike one.following graph stacked bar plot.","code":"\nhead(beaver1, n = 5)\n##   day time  temp activ\n## 1 346  840 36.33     0\n## 2 346  850 36.34     0\n## 3 346  900 36.35     0\n## 4 346  910 36.42     0\n## 5 346  920 36.55     0\np <- ggplot(mpg, aes(x = class, fill = drv)) +\n  geom_bar(alpha = .75) +\n  scale_fill_viridis(discrete = TRUE, option = \"mako\", end = .95) +\n  theme_rethink()\n\nggplotly(p)"},{"path":"line-plots.html","id":"line-plots","chapter":"4 Line plots","heading":"4 Line plots","text":"","code":""},{"path":"line-plots.html","id":"simple-line-plot","chapter":"4 Line plots","heading":"4.1 Simple line plot","text":"Yes, just .","code":"\np <- ggplot(economics, aes(x = date, y = unemploy)) + \n  geom_line() +\n  theme_rethink()\n\nggplotly(p)"},{"path":"line-plots.html","id":"multiple-lines-plot","chapter":"4 Line plots","heading":"4.2 Multiple lines plot","text":"","code":"\np <- ggplot(economics_long, aes(x = date, y = value01, \n    color = variable)) +\n  geom_line() +\n  scale_color_viridis(discrete = TRUE, option = \"mako\", end = .95) +\n  theme_rethink()\n\nggplotly(p)"},{"path":"scatter-plots.html","id":"scatter-plots","chapter":"5 Scatter plots","heading":"5 Scatter plots","text":"","code":""},{"path":"scatter-plots.html","id":"simple-scatter-plot","chapter":"5 Scatter plots","heading":"5.1 Simple scatter plot","text":"","code":"\np <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point(alpha = .85) +\n  theme_rethink()\n\nggplotly(p)"},{"path":"scatter-plots.html","id":"jittered-scatter-plot","chapter":"5 Scatter plots","heading":"5.2 Jittered scatter plot","text":"","code":"\np <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_jitter(alpha = .85, width = 0.5, height = 0.5) +\n  theme_rethink()\n\nggplotly(p, tooltip = \"none\")"},{"path":"scatter-plots.html","id":"multiple-scatter-plot","chapter":"5 Scatter plots","heading":"5.3 Multiple scatter plot","text":"","code":"\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point(alpha = .85) +\n  scale_color_viridis(discrete = TRUE, option = \"mako\", end = .95) +\n  theme_rethink()\n\nggplotly(p)"},{"path":"likert-plots.html","id":"likert-plots","chapter":"6 Likert plots","heading":"6 Likert plots","text":"combination stacked bar charts overlayed error/CI bars ‘middle split’ seems informative:See example summary chart.Coding note…3To give ‘CI () range’ ordered categorical outcome, need focus break point. chose ‘engagement --/3.’ re-coding just visualization.4","code":"\n# Load packages\nlibrary(likert)\n\n# Load data\ndata(pisaitems)\n\n# Prepare data\nitems <- pisaitems %>%\n  as_tibble() %>%\n  select(starts_with(\"ST25\")) %>%\n  rename(\n    Magazines = ST25Q01,\n    `Comic books` = ST25Q02,\n    Fiction = ST25Q03,\n    `Non-fiction books` = ST25Q04,\n    Newspaper = ST25Q05\n  )\nengage_stack_layers <- list(\n  geom_bar(aes(fill=engagement), position=\"fill\"),\n    theme(axis.title.x = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.ticks.y = element_blank(),\n          axis.title.y = element_blank()\n    ),\n  stat_summary(aes(y = engage_high_n),\n           fun.data = mean_cl_normal,  na.rm = TRUE,\n           geom = \"errorbar\", colour = \"pink\", width = 0.2),\nstat_summary(aes(y = engage_high_n),\n           fun.data = mean_cl_normal,  na.rm = TRUE,\n           geom = \"errorbar\",  colour = \"purple\", width = 0.2,\n           fun.args = list(mult = 1)),\n     coord_flip()\n      )\nmutate_eng <- function(df) {\n{df} %>%\n  filter(!is.na(engagement)) %>%\n        mutate(engagement= fct_recode(engagement,\n                              \"(1) None\" = \"(1) No engagement\",\n                             \"(2) Mild\" = \"(2) Mild engagement\" ,\n                             \"(3) Moderate\" = \"(3) Moderate engagement\",\n                             \"(4) Considerable\" = \"(4) Considerable engagement\",\n                             \"(5) High\" = \"(5) High engagement\",\n                             ))\n}"},{"path":"forest-plots.html","id":"forest-plots","chapter":"7 Forest plots","heading":"7 Forest plots","text":"CI’s/ranges5 group6","code":"\n#grouped_forest_plot is defined in plotting_functions.R\n\ngroup_fp_do <- function(df, groups=model_name, xlims=c(NA,NA), vl=1){\n  df %>%\n    grouped_forest_plot(., groups = {{groups}}, vline = {{vl}}) +\n    coord_cartesian(xlim = {{xlims}}) +\n    scale_colour_discrete(name = \"\",\n                        labels = function(x) str_wrap(x, width = 15)) +\n  theme_bw() +\n  theme(legend.position = \"bottom\") +\n  guides(fill=guide_legend(nrow=2, byrow=TRUE))\n}"},{"path":"treemaps.html","id":"treemaps","chapter":"8 Treemaps","heading":"8 Treemaps","text":"","code":"\n# Load packages\nlibrary(treemapify)"},{"path":"treemaps.html","id":"a-simple-treemap","chapter":"8 Treemaps","heading":"8.1 A simple treemap","text":"","code":"\np <- ggplot(G20, aes(area = gdp_mil_usd, fill = hdi)) +\n  geom_treemap()\n\np"},{"path":"treemaps.html","id":"a-simple-treemap-with-text","chapter":"8 Treemaps","heading":"8.2 A simple treemap with text","text":"","code":"\np <- ggplot(G20, aes(area = gdp_mil_usd, fill = hdi, label = country)) +\n  geom_treemap() +\n  geom_treemap_text(\n    fontface = \"italic\", \n    colour = \"white\", \n    place = \"centre\",\n    grow = TRUE\n  )\n\np"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
