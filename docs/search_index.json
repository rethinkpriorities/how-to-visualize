[["likert-plots.html", "4 Likert plots 4.1 Plotting a single Likert-scale response 4.2 Plotting multiple Likert-scale responses", " 4 Likert plots 4.1 Plotting a single Likert-scale response 4.1.1 A bar plot ggplot(magazines_counts, aes(x = response_num, y = pct, fill = response)) + geom_col(alpha = .8) + scale_y_continuous(labels = percent_format(accuracy = 1)) + labs( x = &quot;Frequency reading magazines&quot;, y = &quot;Percentage of respondents&quot;, fill = &quot;Categories&quot; ) + scale_fill_viridis(discrete = TRUE, option = &quot;mako&quot;, begin = .1, end = .9) + theme_minimal() 4.2 Plotting multiple Likert-scale responses 4.2.1 A stacked bar plot ggplot(counts, aes( x = item, y = pct, fill = reorder(response, desc(response)) ) ) + geom_col(alpha = .8) + coord_flip() + geom_text( mapping = aes(label = paste0(round(pct * 100), &quot;%&quot;)), position = position_stack(vjust = 0.5), size = 3 ) + scale_fill_viridis( discrete = TRUE, option = &quot;mako&quot;, direction = -1, begin = .1, end = .9 ) + scale_y_continuous(labels = percent_format(accuracy = 1)) + labs( x = &quot;&quot;, y = &quot;&quot;, color = &quot;Rating&quot;, fill = &quot;Rating&quot; ) + theme_minimal() # Calculate halves of the neutral category counts_split &lt;- counts %&gt;% filter(response_num == 3) %&gt;% mutate(pct = pct / 2) # Replace old neutral-category new_counts &lt;- filter(counts, response_num != 3) new_counts &lt;- full_join(new_counts, counts_split) %&gt;% arrange(item, response_num) # Separate the data frames new_counts1 &lt;- filter(new_counts, response_num %in% 1:3) new_counts2 &lt;- filter(new_counts, response_num %in% 3:5) # Create a colors vector colors &lt;- mako(n = 5, begin = .1, end = .9) names(colors) &lt;- levels(counts$response) # Plot p &lt;- ggplot() + geom_col( data = new_counts1, mapping = aes(x = item, y = -pct, fill = response), alpha = .8 ) + geom_col( data = new_counts2, mapping = aes(x = item, y = pct, fill = response), position = position_stack(reverse = TRUE), alpha = .8 ) + coord_flip() + scale_y_continuous(labels = percent_format(accuracy = 1)) + scale_fill_manual(values = colors) + labs(x = &quot;&quot;, y = &quot;&quot;, fill = &quot;Category:&quot;) + theme_minimal() + theme(legend.position = &quot;bottom&quot;) p # Create labels labels &lt;- counts %&gt;% group_by(item) %&gt;% mutate( temp = case_when( response_num == 3 ~ pct / 2, response_num &lt; 4 ~ pct, TRUE ~ 0), bottom_half = sum(temp), pos = cumsum(pct) - (pct / 2) - bottom_half ) p + geom_text( data = labels, mapping = aes( x = item, y = pos, label = paste0(round(pct * 100), &quot;%&quot;) ), size = 2.5 ) The combination of stacked bar charts and overlayed error/CI bars for some ‘middle split’ seems informative: See here for an example of a summary chart. Coding note…1 engage_stack_layers &lt;- list( geom_bar(aes(fill=engagement), position=&quot;fill&quot;), theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(), axis.title.y = element_blank() ), stat_summary(aes(y = engage_high_n), fun.data = mean_cl_normal, na.rm = TRUE, geom = &quot;errorbar&quot;, colour = &quot;pink&quot;, width = 0.2), stat_summary(aes(y = engage_high_n), fun.data = mean_cl_normal, na.rm = TRUE, geom = &quot;errorbar&quot;, colour = &quot;purple&quot;, width = 0.2, fun.args = list(mult = 1)), coord_flip() ) To give a ‘CI (or other) range’ on an ordered categorical outcome, you need to focus on some break point. We chose ‘engagement at-or-below/above 3.’ We did some re-coding just before the visualization.2 mutate_eng &lt;- function(df) { {df} %&gt;% filter(!is.na(engagement)) %&gt;% mutate(engagement= fct_recode(engagement, &quot;(1) None&quot; = &quot;(1) No engagement&quot;, &quot;(2) Mild&quot; = &quot;(2) Mild engagement&quot; , &quot;(3) Moderate&quot; = &quot;(3) Moderate engagement&quot;, &quot;(4) Considerable&quot; = &quot;(4) Considerable engagement&quot;, &quot;(5) High&quot; = &quot;(5) High engagement&quot;, )) } I ‘list a bunch of options’ below; I reused these across plots for EAS 2020, to make the code more concise and modular. Maybe worth functionalizing this? It would be better for this not to specify particular column names(engagement, engage_high_n), but have that separated out↩︎ Putting this here rather than in the build file is ‘marginally OK practice’ as it’s coding just for a specific analysis.↩︎ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
