{
  "hash": "b3c6ba1ec24b453ed47c9b6d7cfc343c",
  "result": {
    "markdown": "---\ntitle: \"Plotting labels\"\neditor: visual\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)\nlibrary(viridis)\n```\n:::\n\n\nSometimes you want to add labels to a plot. This could be to make it clear to which group a geom belongs to or perhaps to also plot the numeric values so it is clear what the exact values are. This is not always easy to do, so in this chapter we show some basic plots with labels and more advanced techniques.\n\n## Labels next to the plot\n\nIf you want to label, for example, every bar plot, but the height of the bar could cover the entire range of the plot area, then you may want to put labels next to the plot. This is tricky to do, but below is sort of a hacky solution to get it done. The trick is to add a rectangle to the plot and position it where you want the labels to go. Since this will be outside of the grid area of the plot, we have to specify the limits of the plotting area (see `scale_x_continuous()` in the code below). Optionally you can reduce the default spacing between the plots by setting `mult` to `c(0, 0)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- tibble(\n  x = rep(c(.5, .25, .05, -.05, -.25, -.5), 4),\n  y = rep(c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"), 4),\n  facet = rep(c(\"A\", \"B\", \"C\", \"D\"), each = 6)\n)\n\nggplot(data, aes(x = x, y = y)) +\n  geom_col() +\n  facet_wrap(~ facet) +\n  geom_rect(\n    aes(xmin = 1, xmax = Inf, ymin = -Inf, ymax = Inf), \n    fill = \"white\"\n  ) +\n  geom_text(\n    aes(x = 1.125, y = y, label = format(round(x, 2), nsmall = 2)), \n    size = 3,\n    alpha = .8,\n    hjust = .5\n  ) +\n  scale_x_continuous(\n    limits = c(-1, 1.25), \n    expand = expansion(mult = c(0, 0))\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](labels_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "labels_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}